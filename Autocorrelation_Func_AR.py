#Author: Sepehr Roudini.
#Date: 05/02/2018.
#University of Iowa.
#Department of Chemical Engineering.
#Purpose: Calculating autocorrelation
#functions for Ar(1) and Ar(2)


#--------------------------------------------------------------------------------------------#
#Defining function and importing necessary libraries.
#--------------------------------------------------------------------------------------------#

##############################################################################################
#Libraries used in this function are: numpy.
##############################################################################################
#Lag: Number of lags(should be more than 3).
##############################################################################################
#phi1:autoregression parameter1
##############################################################################################
#phi2: autoregression parameter2
##############################################################################################
#This functions returnes respectively
#an array of lags for AR(1) and an
#array of lags for AR(2)
##############################################################################################
def Autocorrelation_Function(phi1,phi2,Lag):
#numpy is for data manipulationt
    import  numpy as np
#--------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------#


#--------------------------------------------------------------------------------------------#
#Computing autocorrelation
#--------------------------------------------------------------------------------------------#
    #AR(1)
    lag1 = phi1
    Lags1 = np.zeros(Lag+1)
    Lags1[0] = 1
    Lags1[1] = lag1
    if Lag>1:
        for i in range(2,Lag+1):
            Lags1[i] = (lag1**i)
    #AR(2)
    phi = np.asanyarray([phi1,phi2])
    lag11=(phi1)/(1-phi2)
    lag22= (phi2) + (phi1**2)/(1-phi2) 
    Lags2 = np.zeros(Lag+1)
    Lags2[0] = 1
    Lags2[1] = lag11
    Lags2[2] = lag22
    for j in range(3,Lag+1):
        Lags2[j] = (phi[0]*(Lags2[j-1]))+(phi[1]*(Lags2[j-2]))
    return Lags1, Lags2
#--------------------------------------------------------------------------------------------#
#--------------------------------------------------------------------------------------------#
